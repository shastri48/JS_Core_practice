{"version":3,"sources":["JS/chunk.js","main.js"],"names":["chunk","arr","size","newArr","end","start","length","push","slice","_"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEe,SAASA,KAAT,CAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACvC,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,GAAG,GAAGF,IAAV;;AACE,OAAI,IAAIG,KAAK,GAAG,CAAhB,EAAmBA,KAAK,GAAGJ,GAAG,CAACK,MAA/B,EAAuCD,KAAK,IAAEH,IAA9C,EAAmD;AACjDC,IAAAA,MAAM,CAACI,IAAP,CAAYN,GAAG,CAACO,KAAJ,CAAUH,KAAV,EAAiBD,GAAjB,CAAZ;AACAA,IAAAA,GAAG,IAAIF,IAAP;AACD;;AACD,SAAOC,MAAP;AACD;;;;ACZH;;;;AACA,IAAIM,CAAC,GAAG;AACPT,EAAAA,KAAK,EAALA;AADO,CAAR","file":"main.1f19ae8e.map","sourceRoot":"..","sourcesContent":["// 1. Name: chunk\n// work: Breaks an array into chunks\n// arguments: Array and size of each chunk\n\nexport default function chunk(arr, size) {\n  var newArr = [];\n  var end = size;\n    for(let start = 0; start < arr.length; start+=size){\n      newArr.push(arr.slice(start, end));\n      end += size;\n    }\n    return newArr;\n  }\n  ","import chunk from './JS/chunk.js';\nvar _ = {\n chunk\n}"]}